buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

ext {
    isReleaseBuild = {
        return project.hasProperty("RELEASE")
    }

    getReleaseRepositoryUrl = {
        return project.hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
                : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
    }

    getSnapshotRepositoryUrl = {
        return project.hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
                : "https://oss.sonatype.org/content/repositories/snapshots/"
    }

    getRepositoryUsername = {
        return project.hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
    }

    getRepositoryPassword = {
        return project.hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
    }
}

subprojects
{
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    sourceCompatibility = 21
    targetCompatibility = 21

    version project.getProperty('version') + (isReleaseBuild() ? "" : "-SNAPSHOT")

    java {
        withJavadocJar()
        withSourcesJar()
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    tasks.withType(Test) {
       systemProperty 'file.encoding', 'UTF-8'
    }

    tasks.named('jar') {
        manifest {
            attributes('Automatic-Module-Name': 'gdx.jnigen.loader')
        }
    }

    javadoc {
        options.addStringOption('Xdoclint:none', '-quiet')
    }

    publishing {
        publications {
            maven(MavenPublication) {
                groupId project.group
                artifactId project.name
                version project.version
                from components.java
            }
        }
    }
}

apply plugin: 'eclipse'
eclipse.project.name = "root"

apply from: rootProject.file('publish.gradle')